version: 2.1

description: Checkouts connected repository without cloning the full repo, but just a few recent commits instead.

commands:
  checkout:
    description: Checkouts connected repository without cloning the full repo, but just a few recent commits instead.

    steps:
      - run:
          name: Checkout code (shallow)
          command: |
            # This command has been mostly copied from the `checkout` command available in CircleCI.

            mkdir -p ~/.ssh

            echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' >> ~/.ssh/known_hosts

            (umask 077; touch ~/.ssh/id_rsa)
            chmod 0600 ~/.ssh/id_rsa
            (cat \<<EOF > ~/.ssh/id_rsa
            $CHECKOUT_KEY
            EOF
            )

            # use git+ssh instead of https
            git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true
            git config --global gc.auto 0 || true

            if [ -e $CIRCLE_WORKING_DIRECTORY/.git ]
            then
              cd $CIRCLE_WORKING_DIRECTORY
              git remote set-url origin "$CIRCLE_REPOSITORY_URL" || true
            else
              mkdir -p $CIRCLE_WORKING_DIRECTORY
              cd $CIRCLE_WORKING_DIRECTORY
              git clone --depth=10 "$CIRCLE_REPOSITORY_URL" .
            fi

            if [ -n "$CIRCLE_TAG" ]
            then
              git fetch --depth=10 --force origin "refs/tags/${CIRCLE_TAG}"
            elif [[ "$CIRCLE_BRANCH" =~ ^pull\/* ]]
            then
              # For PR from Fork
              git fetch --depth=10 --force origin "$CIRCLE_BRANCH/head:remotes/origin/$CIRCLE_BRANCH"
            else
              git fetch --depth=10 --force origin "$CIRCLE_BRANCH:remotes/origin/$CIRCLE_BRANCH"
            fi

            if [ -n "$CIRCLE_TAG" ]
            then
              git reset --hard "$CIRCLE_SHA1"
              git checkout -q "$CIRCLE_TAG"
            elif [ -n "$CIRCLE_BRANCH" ]
            then
              git checkout -b "$CIRCLE_BRANCH" "$CIRCLE_SHA1"
            fi

            git reset --hard "$CIRCLE_SHA1"
