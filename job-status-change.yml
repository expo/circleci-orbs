version: 2.1

description: Tracks changes in job statuses between consecutive runs.

commands:
  status:
    description: |
      Tracks changes between the current and previous runs of the current job and writes the status change to an environment variable named CIRCLE_JOB_STATUS_CHANGE, with one of four values:

        success: the job was previously successful and is still successful
        failed:  the job previously failed and is still failing
        fixed:   the job previously failed but is now successful
        broke:   the job was previously successful but is now failing

    parameters:
      directory:
        description: The directory in which to store files reporting the job status
        type: string
        default: .
    
    steps:
      - run:
          name: Record job name
          when: always
          command: echo "$CIRCLE_JOB" > /tmp/.ci_job_name
      - restore_cache:
          when: always
          key: build-status-v1-{{ .Branch }}-{{ checksum "/tmp/.ci_job_name" }}-
      - run:
          name: Record successful job
          command: |
            [ -f "<< parameters.directory >>/.ci_job_status" ] \
              && previous_job_status=$(cat "<< parameters.directory >>/.ci_job_status") \
              || true
            [ "${previous_job_status:-0}" -eq 0 ] \
              && job_status_change=success \
              || job_status_change=fixed
            echo 0 > "<< parameters.directory >>/.ci_job_status"
            echo "export CIRCLE_JOB_STATUS_CHANGE=\"$job_status_change\"" >> "$BASH_ENV"
      - run:
          name: Record failed job
          when: on_fail
          command: |
            [ -f "<< parameters.directory >>/.ci_job_status" ] \
              && previous_job_status=$(cat "<< parameters.directory >>/.ci_job_status") \
              || true
            [ "${previous_job_status:-1}" -eq 1 ] \
              && job_status_change=failed \
              || job_status_change=broke
            echo 1 > "<< parameters.directory >>/.ci_job_status"
            echo "export CIRCLE_JOB_STATUS_CHANGE=\"$job_status_change\"" >> "$BASH_ENV"
      - save_cache:
          when: always
          key: build-status-v1-{{ .Branch }}-{{ checksum "/tmp/.ci_job_name" }}-{{ epoch }}
          paths:
            - << parameters.directory >>/.ci_job_status
